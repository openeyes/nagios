#!/bin/bash
mutex() {
	local file=$1 pid pids 

	exec 9>>"$file"
	{ pids=$(fuser -f "$file"); } 2>&- 9>&- 
	for pid in $pids; do
		[[ $pid = $$ ]] && continue

		exec 9>&- 
		return 1 # Locked by a pid.
	done 
}

mutex /root/backup_rsync.lock || { echo "Already running."; exit 1; }

# Make sure backup isn't running
flock -x -n /tmp/.oebackup.lock touch /tmp/.oebackup.lock || { echo "Backup running."; exit 1; }

echo "$BASHPID" > /root/backup_rsync.pid

hostname=`hostname`
rsync -aPr /backup/$hostname/ /mehbackup/$hostname/ 1>/dev/null 2>/root/backup_rsync.output
r=`cat /root/backup_rsync.output`
if [ ! "$r" == "" ] ; then
	cat /root/backup_rsync.output >> /root/backup_rsync.log
	echo 0 > /etc/nagios/backup.status
else
	echo 1 > /etc/nagios/backup.status
fi

rm -f /root/backup_rsync.pid
